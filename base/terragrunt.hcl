include "root" {
  path = find_in_parent_folders()
}

dependency "cluster" {
  config_path = "../cluster"
}

generate "provider" {
  path = "autogenerated_provider.tf"
  if_exists = "overwrite_terragrunt"
  contents = <<EOF
provider "kubernetes" {
  host     = "${dependency.cluster.outputs.kubernetes_host}"

  client_certificate     = <<EOC
${base64decode(dependency.cluster.outputs.client_certificate)}
EOC
  client_key             = <<EOC
${base64decode(dependency.cluster.outputs.client_key)}
EOC
  cluster_ca_certificate = <<EOC
${base64decode(dependency.cluster.outputs.cluster_ca_certificate)}
EOC
}

provider "helm" {
  kubernetes {
    host     = "${dependency.cluster.outputs.kubernetes_host}"

    client_certificate     = <<EOC
${base64decode(dependency.cluster.outputs.client_certificate)}
EOC
    client_key             = <<EOC
${base64decode(dependency.cluster.outputs.client_key)}
EOC
    cluster_ca_certificate = <<EOC
${base64decode(dependency.cluster.outputs.cluster_ca_certificate)}
EOC
  }
}

terraform {
  required_providers {
    helm = {
      source  = "hashicorp/helm"
      version = "2.15.0"
    }
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = "2.32.0"
    }
  }
}
EOF
}

inputs = yamldecode(file(find_in_parent_folders("config.yaml")))["base"]